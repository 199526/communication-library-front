name: Manual Alpha Package Release

on:
  # triggering in automated way to appear in github workflows
  pull_request:
    branches: [main]

  # Allows running workflow manually from the GitHub Actions tab
  workflow_dispatch:

jobs:
  build_and_test:
    name: Build and Test
    runs-on: ubuntu-latest

    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE so job can access it
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      # Ensure node version is great enough
      - name: Use Node.js v12.x
        uses: actions/setup-node@v1
        with:
          node-version: '12.x'

      # Install dependencies
      - name: Install rush
        run: npm install -g @microsoft/rush
      - name: Install dependencies
        run: rush install

        # Get datetime
      - name: Get datetime for alpha release name
        id: datetime
        run: |
          echo "::set-output name=datetime::$(date +'%Y%m%d.%H%M')"

      # Bump alpha package versions
      - name: Bump alpha package versions
        run: node common/config/node_modules/beachball/bin/beachball canary --canary-name alpha-${{ steps.datetime.outputs.datetime }} --tag dev --no-publish

      # Build packages
      - name: Build @azure/communication-react package
        run: rush build -t @azure/communication-react

      # Test Packages
      - name: Test @azure/communication-react package
        run: rush test -t @azure/communication-react

      # Push git tags
      - name: Push git tags
        run: git push --tags

      # Publish package
      - name: Package alpha packages for release
        run: npm pack
        working-directory: ./packages/communication-react

      # Deploy npm package - this is done by uploading to Azure's SDK blob storage then triggering their partner release pipeline.
      # More info: https://dev.azure.com/azure-sdk/internal/_wiki/wikis/internal.wiki/1/Partner-Release-Pipeline
      - name: Upload tarball to blob storage
        uses: azure/CLI@v1
        with:
          azcliversion: 2.0.72
          inlineScript: |
            az login --service-principal --application-id cfb5fe52-8bb2-4901-9056-70449fa2df96
            az storage azcopy blob upload azcopy "packages/communication-react/release/*" "https://azuresdkpartnerdrops.blob.core.windows.net/drops/azure-communication-services/react/npm/1.0.0-alpha-${{ steps.datetime.outputs.datetime }}"
        env:
          AZCOPY_SPA_CLIENT_SECRET: ${{ secrets.AZURESDKPARTNERDROPS_SERVICE_PRINCIPAL_KEY }}
      # Blocked on: https://github.com/Azure/pipelines/pull/11
      # - uses: Azure/pipelines@v1
      #   with:
      #     azure-devops-project-url: 'https://dev.azure.com/azure-sdk/internal'
      #     azure-pipeline-name: 'azuresdkpartnerdrops to npm'
      #     azure-devops-token: '${{ secrets.AZURE_DEVOPS_TOKEN }}'
      #     azure-pipeline-variables: '{"accessLevel": "public", "BlobPath": "azure-communication-services/react/npm/1.0.0-alpha-${{ steps.datetime.outputs.datetime }}", "registry": "https://registry.npmjs.org/", "skipDiff": "latest", "tag": "dev"}'
